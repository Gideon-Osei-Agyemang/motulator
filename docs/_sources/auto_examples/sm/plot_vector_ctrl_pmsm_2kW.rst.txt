
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/sm/plot_vector_ctrl_pmsm_2kW.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_sm_plot_vector_ctrl_pmsm_2kW.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_sm_plot_vector_ctrl_pmsm_2kW.py:


Example simulation script: vector-controlled 2.2-kW PMSM drive.
===============================================================

Sensorless vector control is used in the default parameters.

.. GENERATED FROM PYTHON SOURCE LINES 8-53



.. image-sg:: /auto_examples/sm/images/sphx_glr_plot_vector_ctrl_pmsm_2kW_001.png
   :alt: plot vector ctrl pmsm 2kW
   :srcset: /auto_examples/sm/images/sphx_glr_plot_vector_ctrl_pmsm_2kW_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    SynchronousMotorDrive(motor=SynchronousMotor(p=3, R_s=3.6, L_d=0.036, L_q=0.051, psi_f=0.545), mech=Mechanics(J=0.015, B=0), conv=Inverter(u_dc0=540))

    SynchronousMotorVectorCtrlPars(sensorless=True, T_s=0.00025, delay=1, alpha_c=1256.6370614359173, alpha_fw=125.66370614359172, alpha_s=25.132741228718345, tau_M_max=29.2, i_s_max=10.606601717798213, i_sd_min=None, k_u=0.95, w_nom=471.23889803846896, R_s=3.6, L_d=0.036, L_q=0.051, psi_f=0.545, p=3, J=0.015, w_o=251.32741228718345)

    Execution time: 12.02 s






|

.. code-block:: default

    from time import time
    import numpy as np
    import motulator as mt

    # Start computing the execution time
    start_time = time()

    # Base values
    base = mt.BaseValues(U_nom=370, I_nom=4.3, f_nom=75, tau_nom=14,
                         P_nom=2.2e3, p=3)

    # System model
    motor = mt.SynchronousMotor()
    mech = mt.Mechanics()
    conv = mt.Inverter()
    # conv = mt.PWMInverter()
    mdl = mt.SynchronousMotorDrive(motor, mech, conv)

    # Controller
    pars = mt.SynchronousMotorVectorCtrlPars(sensorless=True)
    # pars.plot(base)  # Plot control look-up tables
    ctrl = mt.SynchronousMotorVectorCtrl()

    # Set the speed reference and the external load torque
    # Speed reference
    times = np.array([0, .125, .25, .375, .5, .625,  .75, .875, 1])*4
    values = np.array([0,  0, 1,   1, 0,  -1, -1,   0, 0])*base.w
    ctrl.w_m_ref = mt.Sequence(times, values)
    # External load torque
    times = np.array([0, .125, .125, .875, .875, 1])*4
    values = np.array([0, 0, 1, 1, 0, 0])*base.tau_nom
    mdl.mech.tau_L_ext = mt.Sequence(times, values)

    # Print the system model and controller parameters
    print(str(mdl)+'\n\n'+str(ctrl))

    # Create the simulation object and simulate it
    sim = mt.Simulation(mdl, ctrl, base=base, t_stop=4)
    sim.simulate()

    # Print the execution time
    print('\nExecution time: {:.2f} s'.format((time() - start_time)))

    # Plot results
    mt.plot_pu(sim)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  12.900 seconds)


.. _sphx_glr_download_auto_examples_sm_plot_vector_ctrl_pmsm_2kW.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_vector_ctrl_pmsm_2kW.py <plot_vector_ctrl_pmsm_2kW.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_vector_ctrl_pmsm_2kW.ipynb <plot_vector_ctrl_pmsm_2kW.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
