
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/im/plot_vector_ctrl_im_2kW.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_im_plot_vector_ctrl_im_2kW.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_im_plot_vector_ctrl_im_2kW.py:


Vector-controlled 2.2-kW induction motor drive
==============================================

This example simulates sensorless vector control of a 2.2-kW induction motor
drive.

.. GENERATED FROM PYTHON SOURCE LINES 11-12

Import the packages and start the timer.

.. GENERATED FROM PYTHON SOURCE LINES 12-18

.. code-block:: default


    from time import time
    import numpy as np
    import motulator as mt
    start_time = time()








.. GENERATED FROM PYTHON SOURCE LINES 19-20

Compute base values based on the nominal values (just for figures).

.. GENERATED FROM PYTHON SOURCE LINES 20-28

.. code-block:: default


    base = mt.BaseValues(U_nom=400,        # Line-line rms voltage
                         I_nom=5,          # Rms current
                         f_nom=50,         # Frequency
                         tau_nom=14.6,     # Torque
                         P_nom=2.2e3,      # Power
                         p=2)              # Number of pole pairs








.. GENERATED FROM PYTHON SOURCE LINES 29-30

Configure the system model. Enable PWM by uncommenting the line below.

.. GENERATED FROM PYTHON SOURCE LINES 30-38

.. code-block:: default


    # Gamma-model of in induction motor
    motor = mt.InductionMotor(R_s=3.7, R_r=2.5, L_ell=.023, L_s=.245, p=2)
    mech = mt.Mechanics(J=.015)         # Mechanics model
    conv = mt.Inverter(u_dc0=540)       # Inverter model
    # conv = mt.PWMInverter(u_dc0=540)  # Inverter with PWM modeled
    mdl = mt.InductionMotorDrive(motor, mech, conv)  # System model








.. GENERATED FROM PYTHON SOURCE LINES 39-42

Configure the control system. You may also try to change the parameters.
Notice that the drive may become unstable if you for example have too large
parameter errors. This may happen in real drives as well.

.. GENERATED FROM PYTHON SOURCE LINES 42-58

.. code-block:: default


    ctrl = mt.InductionMotorVectorCtrl(mt.InductionMotorVectorCtrlPars(
        sensorless=True,                # Enable sensorless mode
        T_s=250e-6,                     # Sampling period
        delay=1,                        # Amount of computational delay
        alpha_c=2*np.pi*200,            # Current-control bandwidth
        alpha_o=2*np.pi*40,             # Observer bandwidth
        alpha_s=2*np.pi*4,              # Speed-control bandwidth
        psi_R_nom=.9,                   # Nominal rotor flux
        i_s_max=1.5*base.i,             # Current limit
        tau_M_max=1.5*base.tau_nom,     # Torque limit (for the speed ctrl)
        J=.015,                         # Inertia estimate (for the speed ctrl)
        p=2,                            # Number of pole pairs
        # Inverse-Gamma model parameter estimates
        R_s=3.7, R_R=2.1, L_sgm=.021, L_M=.224))








.. GENERATED FROM PYTHON SOURCE LINES 59-62

Set the speed reference and the external load torque. You may also try to
uncomment the field-weakening sequence. More complicated sequences could be
created as functions.

.. GENERATED FROM PYTHON SOURCE LINES 62-71

.. code-block:: default


    # Simple acceleration and load torque step
    ctrl.w_m_ref = lambda t: (t > .2)*(.5*base.w)
    mdl.mech.tau_L_ext = lambda t: (t > .75)*base.tau_nom

    # No load, field-weakening (uncomment to try)
    # mdl.mech.tau_L_ext = lambda t: 0
    # ctrl.w_m_ref = lambda t: (t > .2)*(2*base.w)








.. GENERATED FROM PYTHON SOURCE LINES 72-73

Create the simulation object and simulate it.

.. GENERATED FROM PYTHON SOURCE LINES 73-79

.. code-block:: default


    sim = mt.Simulation(mdl, ctrl, base=base, t_stop=1.5)
    sim.simulate()
    # Print the execution time
    print('\nExecution time: {:.2f} s'.format((time() - start_time)))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Execution time: 2.59 s




.. GENERATED FROM PYTHON SOURCE LINES 80-82

Plot results in per-unit values. By uncommenting the second line you can
plot the results in SI units.

.. GENERATED FROM PYTHON SOURCE LINES 82-85

.. code-block:: default


    mt.plot_pu(sim)
    # mt.plot(sim)



.. image-sg:: /auto_examples/im/images/sphx_glr_plot_vector_ctrl_im_2kW_001.png
   :alt: plot vector ctrl im 2kW
   :srcset: /auto_examples/im/images/sphx_glr_plot_vector_ctrl_im_2kW_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.142 seconds)


.. _sphx_glr_download_auto_examples_im_plot_vector_ctrl_im_2kW.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_vector_ctrl_im_2kW.py <plot_vector_ctrl_im_2kW.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_vector_ctrl_im_2kW.ipynb <plot_vector_ctrl_im_2kW.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
