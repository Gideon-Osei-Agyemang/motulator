
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/sm_with_flux_maps/plot_obs_vhz_ctrl_pmsyrm_thor.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_sm_with_flux_maps_plot_obs_vhz_ctrl_pmsyrm_thor.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_sm_with_flux_maps_plot_obs_vhz_ctrl_pmsyrm_thor.py:


Observer-based V/Hz control: 7.5-kW PM-SyRM
===========================================

This example simulates observer-based V/Hz control of a saturated 7.5-kW
permanent-magnet synchronous reluctance motor. The flux maps of this example
motor, known as THOR, are from the SyR-e project:

    https://github.com/SyR-e/syre_public

The SyR-e project has been licensed under the Apache License, Version 2.0. We
acknowledge the developers of the SyR-e project. The flux maps from other
sources can be used in a similar manner. To study the flux maps in more detail,
see also the module `sm_flux_maps`. It is worth noticing that the saturation is
not taken into account in the control method, only in the system model.
Naturally, the control performance can be improved by taking the saturation
into account in the control algorithm.

.. GENERATED FROM PYTHON SOURCE LINES 22-23

Import the packages.

.. GENERATED FROM PYTHON SOURCE LINES 23-27

.. code-block:: default


    import numpy as np
    import motulator as mt








.. GENERATED FROM PYTHON SOURCE LINES 28-29

Compute base values based on the nominal values (just for figures).

.. GENERATED FROM PYTHON SOURCE LINES 29-33

.. code-block:: default


    base = mt.BaseValues(
        U_nom=284, I_nom=18, f_nom=100, tau_nom=23.8, P_nom=7.5e3, p=2)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Load and plot the flux maps.

.. GENERATED FROM PYTHON SOURCE LINES 35-40

.. code-block:: default


    data = mt.import_syre_data(fname='THOR.mat')
    mt.plot_flux_vs_current(data)
    mt.plot_flux_map(data)




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/sm_with_flux_maps/images/sphx_glr_plot_obs_vhz_ctrl_pmsyrm_thor_001.png
         :alt: plot obs vhz ctrl pmsyrm thor
         :srcset: /auto_examples/sm_with_flux_maps/images/sphx_glr_plot_obs_vhz_ctrl_pmsyrm_thor_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/sm_with_flux_maps/images/sphx_glr_plot_obs_vhz_ctrl_pmsyrm_thor_002.png
         :alt: plot obs vhz ctrl pmsyrm thor
         :srcset: /auto_examples/sm_with_flux_maps/images/sphx_glr_plot_obs_vhz_ctrl_pmsyrm_thor_002.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 41-42

Configure the system model.

.. GENERATED FROM PYTHON SOURCE LINES 42-52

.. code-block:: default


    # Create the motor model
    motor = mt.SynchronousMotorSaturatedLUT(
        p=2, R_s=.23, psi_s_data=data.psi_s.ravel(), i_s_data=data.i_s.ravel())
    # Magnetically linear PM-SyRM model
    # motor = mt.SynchronousMotor(p=2, R_s=.23, L_d=4.2e-3, L_q=17.3e-3, psi_f=.17)
    mech = mt.Mechanics(J=.015)
    conv = mt.Inverter(u_dc=400)
    mdl = mt.SynchronousMotorDrive(motor, mech, conv)








.. GENERATED FROM PYTHON SOURCE LINES 53-54

Configure the control system.

.. GENERATED FROM PYTHON SOURCE LINES 54-71

.. code-block:: default


    pars = mt.SynchronousMotorVHzObsCtrlPars(
        p=2,
        R_s=.23,
        L_d=4.2e-3,
        L_q=17.3e-3,
        psi_f=.17,
        alpha_psi=2*np.pi*50,
        zeta_inf=.1,
        T_s=250e-6,
        rate_limit=2*np.pi*120*10,
        i_s_max=2*base.i,
        psi_s_min=.5*base.psi,
        psi_s_max=1.5*base.psi,
    )
    ctrl = mt.SynchronousMotorVHzObsCtrl(pars)








.. GENERATED FROM PYTHON SOURCE LINES 72-73

Set the speed reference and the external load torque.

.. GENERATED FROM PYTHON SOURCE LINES 73-86

.. code-block:: default


    # Speed reference
    times = np.array([0, .125, .25, .375, .5, .625, .75, .875, 1])*8
    values = np.array([0, 0, 1, 1, 0, -1, -1, 0, 0])*base.w
    ctrl.w_m_ref = mt.Sequence(times, values)

    # Quadratic load torque profile (corresponding to pumps and fans)
    k = base.tau_nom/(base.w/base.p)**2
    mdl.mech.tau_L_w = lambda w_M: k*w_M**2*np.sign(w_M)

    # Rated load torque step at t = 2.5 s (set k = 0 above)
    # mdl.mech.tau_L_t = lambda t: (t > 2.5)*base.tau_nom








.. GENERATED FROM PYTHON SOURCE LINES 87-90

Create the simulation object and simulate it. You can also enable the PWM
model (which makes simulation slower). One-sampling-period computational
delay is modeled.

.. GENERATED FROM PYTHON SOURCE LINES 90-94

.. code-block:: default


    sim = mt.Simulation(mdl, ctrl, pwm=False, delay=1)
    sim.simulate(t_stop=8)








.. GENERATED FROM PYTHON SOURCE LINES 95-97

Plot results in per-unit values. By omitting the argument `base` you can plot
the results in SI units.

.. GENERATED FROM PYTHON SOURCE LINES 97-99

.. code-block:: default


    mt.plot(sim, base=base)



.. image-sg:: /auto_examples/sm_with_flux_maps/images/sphx_glr_plot_obs_vhz_ctrl_pmsyrm_thor_003.png
   :alt: plot obs vhz ctrl pmsyrm thor
   :srcset: /auto_examples/sm_with_flux_maps/images/sphx_glr_plot_obs_vhz_ctrl_pmsyrm_thor_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  28.175 seconds)


.. _sphx_glr_download_auto_examples_sm_with_flux_maps_plot_obs_vhz_ctrl_pmsyrm_thor.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_obs_vhz_ctrl_pmsyrm_thor.py <plot_obs_vhz_ctrl_pmsyrm_thor.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_obs_vhz_ctrl_pmsyrm_thor.ipynb <plot_obs_vhz_ctrl_pmsyrm_thor.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
